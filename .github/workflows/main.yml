name: Build and Test

on:
  push:
    branches: [master, ci-test]
  pull_request:
    branches: [master]
  schedule:
    - cron: "30 2 * * 0"

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - container: 'ubuntu:22.04'
            test: 'yes'
          - container: 'ubuntu:24.04'
            test: 'yes'
          - container: 'archlinux:base-devel'
            test: 'yes'
          - container: 'fedora:latest'
            test: 'yes'
          - container: 'alpine:latest'
            test: 'no'
          - container: 'debian:unstable'
            test: 'yes'

    container:
      image: ${{ matrix.container }}

    steps:
      - name: Sparse checkout the local actions
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          sparse-checkout: .github

      - uses: ./.github/actions/setup-ubuntu
        if: ${{ startsWith(matrix.container, 'ubuntu') }}
      - uses: ./.github/actions/setup-archlinux
        if: ${{ startsWith(matrix.container, 'archlinux') }}
      - uses: ./.github/actions/setup-fedora
        if: ${{ startsWith(matrix.container, 'fedora') }}
      - uses: ./.github/actions/setup-alpine
        if: ${{ startsWith(matrix.container, 'alpine') }}
      - uses: ./.github/actions/setup-debian
        if: ${{ startsWith(matrix.container, 'debian') }}

      - name: Checkout the whole project
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Set the environment
        run: |
          # The second checkout above claims to set safe.directory, yet it
          # doesn't quite work. Perhaps our double/sparse checkout is to blame?
          git config --global --add safe.directory '*'

          for moddir in /usr/lib/modules /lib/modules; do
            if [ -e "$moddir" ]; then
              kernel=$(find "$moddir" -maxdepth 1 -mindepth 1 -type d -exec basename {} \;)
              break
            fi
          done

          # There should be one entry - the kernel we installed
          if [ $(echo "$kernel" | wc -l) -ne 1 ]; then
            echo >&2 "Error: exactly one kernel must be installed"
          fi
          echo "KDIR=$moddir/$kernel/build" >> "$GITHUB_ENV"

      - name: configure
        run: |
          mkdir build
          cd build
          ../autogen.sh c

      - name: build
        run: |
          cd build
          make -j$(nproc)

      - name: test
        if: ${{ matrix.test == 'yes' }}
        run: |
          cd build
          make -j$(nproc) check

      - name: install
        run: |
          cd build
          DESTDIR=$PWD/inst make install

      - name: distcheck
        if: ${{ matrix.test == 'yes' }}
        run: |
          cd build
          make distcheck
